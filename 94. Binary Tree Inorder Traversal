/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> ans;
    void traverse(TreeNode* root){
        if(!root) return;
        traverse(root->left);
        ans.push_back(root->val);
        traverse(root->right);
    }
    vector<int> inorderTraversal(TreeNode* root) {
        ans.clear();
        traverse(root);
        return ans;
        
    }
};
//迭代方法
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        stack<TreeNode* > S;
        //if(!root) return ans;
        while(1){
            while(root){
                S.push(root);
                root = root->left;
            }
            if(S.empty()) break;
            TreeNode* temp;
            temp = S.top();
            S.pop();
            ans.push_back(temp->val);
            if(temp->right){
                root = temp->right;
            }
        }
        return ans;
    }
};
